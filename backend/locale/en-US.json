{
  "response": {
    "success": "Request successful",
    "error": "Request error",
    "server_error": "Internal server error"
  },
  "error": {
    "captcha_error": "Captcha error",
    "captcha_expired": "The captcha has expired, please get it again",
    "json_parse_failed": "JSON parsing failed",
    "invalid_request_params": "Invalid request parameters: {message}",
    "user_not_found": "User not found",
    "username_or_password_error": "Incorrect username or password",
    "user_locked": "User has been locked, please contact system administrator",
    "user_forbidden": "User has been prohibited from backend management operations, please contact system administrator",
    "user_no_role": "User has not been assigned a role, please contact system administrator",
    "user_no_menu": "User has not been assigned a menu, please contact system administrator",
    "username_already_exists": "Username already registered",
    "password_required": "Password cannot be empty",
    "old_password_error": "Incorrect old password",
    "password_mismatch": "Password inputs do not match",
    "refresh_token_expired": "Refresh Token has expired, please log in again",
    "user_login_elsewhere": "This user has logged in elsewhere, please log in again and change password promptly",
    "dept_has_users": "Department has users, cannot delete",
    "task_params_invalid": "Execution failed, task parameters are invalid",
    "upload_file_failed": "File upload failed",
    "plugin_install_failed": "Plugin installation failed, please try again later",
    "model_parse_failed": "Data model column dynamic parsing failed, please contact system super administrator",
    "permission_check_failed": "Permission check failed, please contact system administrator",
    "language_not_found": "Current language pack is not initialized or does not exist",
    "email_config_missing": "Missing email dynamic configuration, please check system parameter configuration - email configuration",
    "crontab_invalid": "Crontab expression is invalid",
    "snowflake_cluster_id_invalid": "Cluster ID must be between 0-{SnowflakeConfig.MAX_DATACENTER_ID}",
    "snowflake_node_id_invalid": "Node ID must be between 0-{SnowflakeConfig.MAX_WORKER_ID}",
    "celery_worker_unavailable": "Celery Worker is temporarily unavailable, please try again later",
    "token_invalid": "Token is invalid",
    "token_expired": "Token has expired",
    "rate_limit_exceeded": "Request too frequent, please try again later",
    "file_type_unknown": "Unknown file type",
    "image_format_not_supported": "This image format is not supported",
    "image_size_exceeded": "Image exceeds maximum limit, please select again",
    "video_format_not_supported": "This video format is not supported",
    "video_size_exceeded": "Video exceeds maximum limit, please select again",
    "plugin_zip_invalid": "Plugin zip package format is invalid",
    "plugin_zip_content_invalid": "Plugin zip package content is invalid",
    "plugin_zip_missing_files": "Required files are missing in the plugin zip package",
    "plugin_already_installed": "This plugin is already installed",
    "git_url_invalid": "Git repository URL format is invalid",
    "sql_file_not_found": "SQL script file does not exist",
    "sql_illegal_operation": "Illegal operations found in SQL script file, only SELECT and INSERT are allowed",
    "demo_mode_forbidden": "This operation is forbidden in demo mode"

  },
  "success": {
    "login_success": "Login successful",
    "login_success_oauth2": "Login successful (OAuth2)",
    "task_execute_success": "Task {task_id} executed successfully",
    "plugin_install_success": "Plugin {plugin_name} installed successfully"
  },
  "validation": {
    "no_such_attribute": "Object does not have attribute '{attribute}'",
    "json_invalid": "Invalid JSON: {error}",
    "json_type": "JSON input should be string, bytes or bytearray",
    "recursion_loop": "Recursion error - circular reference detected",
    "model_type": "Input should be a valid dictionary or {class_name} instance",
    "model_attributes_type": "Input should be a valid dictionary or object with extractable fields",
    "dataclass_exact_type": "Input should be an instance of {class_name}",
    "dataclass_type": "Input should be a dictionary or {class_name} instance",
    "missing": "Field required",
    "frozen_field": "Field is frozen",
    "frozen_instance": "Instance is frozen",
    "extra_forbidden": "Extra inputs are not permitted",
    "invalid_key": "Keys should be strings",
    "get_attribute_error": "Error extracting attribute: {error}",
    "none_required": "Input should be None",
    "enum": "Input should be {expected}",
    "greater_than": "Input should be greater than {gt}",
    "greater_than_equal": "Input should be greater than or equal to {ge}",
    "less_than": "Input should be less than {lt}",
    "less_than_equal": "Input should be less than or equal to {le}",
    "finite_number": "Input should be a finite number",
    "too_short": "{field_type} should have at least {min_length} items after validation, not {actual_length}",
    "too_long": "{field_type} should have at most {max_length} items after validation, not {actual_length}",
    "string_type": "Input should be a valid string",
    "string_sub_type": "Input should be a string, not an instance of a str subclass",
    "string_unicode": "Input should be a valid string, unable to parse raw data as a unicode string",
    "string_pattern_mismatch": "String should match pattern '{pattern}'",
    "string_too_short": "String should have at least {min_length} characters",
    "string_too_long": "String should have at most {max_length} characters",
    "dict_type": "Input should be a valid dictionary",
    "mapping_type": "Input should be a valid mapping, error: {error}",
    "iterable_type": "Input should be iterable",
    "iteration_error": "Error iterating over object, error: {error}",
    "list_type": "Input should be a valid list",
    "tuple_type": "Input should be a valid tuple",
    "set_type": "Input should be a valid set",
    "bool_type": "Input should be a valid boolean",
    "bool_parsing": "Input should be a valid boolean, unable to interpret input",
    "int_type": "Input should be a valid integer",
    "int_parsing": "Input should be a valid integer, unable to parse string as an integer",
    "int_parsing_size": "Unable to parse input string as an integer, exceeds maximum size",
    "int_from_float": "Input should be a valid integer, got a number with a fractional part",
    "multiple_of": "Input should be a multiple of {multiple_of}",
    "float_type": "Input should be a valid number",
    "float_parsing": "Input should be a valid number, unable to parse string as a number",
    "bytes_type": "Input should be valid bytes",
    "bytes_too_short": "Data should have at least {min_length} bytes",
    "bytes_too_long": "Data should have at most {max_length} bytes",
    "value_error": "Value error, {error}",
    "assertion_error": "Assertion failed, {error}",
    "literal_error": "Input should be {expected}",
    "date_type": "Input should be a valid date",
    "date_parsing": "Input should be a valid date in YYYY-MM-DD format, {error}",
    "date_from_datetime_parsing": "Input should be a valid date or datetime, {error}",
    "date_from_datetime_inexact": "Datetime provided to date should have zero time - e.g. be an exact date",
    "date_past": "Date should be in the past",
    "date_future": "Date should be in the future",
    "time_type": "Input should be a valid time",
    "time_parsing": "Input should be in a valid time format, {error}",
    "datetime_type": "Input should be a valid datetime",
    "datetime_parsing": "Input should be a valid datetime, {error}",
    "datetime_object_invalid": "Invalid datetime object, got {error}",
    "datetime_past": "Input should be in the past",
    "datetime_future": "Input should be in the future",
    "timezone_naive": "Input should not have timezone info",
    "timezone_aware": "Input should have timezone info",
    "timezone_offset": "Timezone offset of {tz_expected} required, got {tz_actual}",
    "time_delta_type": "Input should be a valid timedelta",
    "time_delta_parsing": "Input should be a valid timedelta, {error}",
    "frozen_set_type": "Input should be a valid frozenset",
    "is_instance_of": "Input should be an instance of {class}",
    "is_subclass_of": "Input should be a subclass of {class}",
    "callable_type": "Input should be callable",
    "union_tag_invalid": "Input tag '{tag}' found using {discriminator} does not match any of the expected tags: {expected_tags}",
    "union_tag_not_found": "Unable to extract tag using discriminator {discriminator}",
    "arguments_type": "Arguments must be a tuple, list or dict",
    "missing_argument": "Missing required argument",
    "unexpected_keyword_argument": "Unexpected keyword argument",
    "missing_keyword_only_argument": "Missing required keyword-only argument",
    "unexpected_positional_argument": "Unexpected positional argument",
    "missing_positional_only_argument": "Missing required positional-only argument",
    "multiple_argument_values": "Multiple values provided for argument",
    "url_type": "URL input should be a string or URL",
    "url_parsing": "Input should be a valid URL, {error}",
    "url_syntax_violation": "Input violates strict URL syntax rules, {error}",
    "url_too_long": "URL should have at most {max_length} characters",
    "url_scheme": "URL scheme should be {expected_schemes}",
    "uuid_type": "UUID input should be a string, bytes or UUID object",
    "uuid_parsing": "Input should be a valid UUID, {error}",
    "uuid_version": "Expected UUID version {expected_version}",
    "decimal_type": "Decimal input should be an integer, float, string or Decimal object",
    "decimal_parsing": "Input should be a valid decimal",
    "decimal_max_digits": "Decimal input should have no more than {max_digits} digits in total",
    "decimal_max_places": "Decimal input should have no more than {decimal_places} decimal places",
    "decimal_whole_digits": "Decimal input should have no more than {whole_digits} digits before the decimal point",
    "email_type": "Input should be a valid email address",
    "email_parsing": "Input should be a valid email address, {error}"
  },
  "task": {
    "clean_login_log": "Clean login logs",
    "execute_failed": "Task {task_id} execution failed",
    "save_status_failed": "Failed to save latest status of task {name}: {error}",
    "add_to_db_failed": "Failed to add task {name} to database"
  },
  "websocket": {
    "no_auth": "WebSocket connection failed: no authorization",
    "auth_failed": "WebSocket connection failed: authorization failed, please check",
    "connection_failed": "WebSocket connection failed: {error}"
  },
  "database": {
    "redis_auth_failed": "❌ Database redis connection authentication failed",
    "connection_failed": "❌ Database connection failed {error}"
  }
}
